=== Creación y configuración de la cuenta

(((GitHub, user accounts)))
Lo primero que necesitas es una cuenta de usuario gratuita.
Simplemente visita https://github.com[], elige un nombre de usuario que
no esté ya en uso, proporciona un correo y una contraseña, y pulsa el botón
verde grande ``Sign up for GitHub''.

.Formulario para darse de alta en GitHub.
image::images/signup.png[Formulario para darse de alta en GitHub.]

Lo siguiente que verás es la página de precios para planes mejores, pero lo
puedes ignorar por el momento. GitHub te enviará un correo para verificar la
dirección que les has dado. Confirma la dirección ahora, es bastante importante
(como veremos después).

[NOTE]
====
GitHub proporciona toda su funcionalidad en cuentas gratuitas, con la
limitación de que todos tus proyectos serán públicos (todos los usuarios
tendrán acceso de lectura).
Los planes de pago de GitHub te permite tener algunos proyectos privados,
pero esto es algo que no veremos en este libro.
====

Si pulsas en el logo del gato con patas de pulpo en la parte superior izquierda
de la pantalla llegarás a tu escritorio principal.
Ahora ya estás listo para comenzar a usar GitHub.

==== Acceso SSH

(((SSH keys, with GitHub)))
Desde ya, puedes acceder a los repositorios Git utilizando el protocolo
`https://`, identificándote con el usuario y la contraseña que acabas de
elegir.
Sin embargo, para simplificar el clonado de proyectos públicos, no
necesitas crearte la cuenta. Es decir, la cuenta solo la necesitas cuando
comienzas a hacer cosas como bifurcar (fork) proyectos y enviar tus propios
cambios más tarde.

Si prefieres usar SSH, necesitas configurar una clave pública. Si aun no
la tienes, mira cómo generarla en <<_generate_ssh_key>>.)
Abre tu panel de control de la cuenta utilizando el enlace de la parte
superior derecha de la ventana:

.Enlace ``Account settings''.
image::images/account-settings.png[Enlace ``Account settings''.]

Aquí selecciona en el lado izquierdo la opción ``SSH keys''.

.Enlace ``SSH keys''.
image::images/ssh-keys.png[Enlace ``SSH keys''.]

Desde ahí, pulsa sobre "`Add an SSH key`", proporcionando un nombre y pegando
los contenidos del fichero `~/.ssh/id_rsa.pub` (o donde hayas definido tu
clave pública) en el área de texto, y pulsa sobre ``Add key''.

[NOTE]
====
Asegúrate darle a tu clave un nombre que puedas recordar. Puedes, por ejemplo,
añadir claves diferentes, con nombres como "Clave Portátil" o "Cuenta de
trabajo" de modo que si tienes que revocar alguna clave más tarde, te resultará
más fácil decidir cuál es.
====

[[_personal_avatar]]
==== Tu icono

También, si quieres, puedes reemplazar el icono (avatar) que te generaron para
ti con una imagen de tu elección. En primer lugar selecciona la opción
``Profile'' (encima de la opción de ``SSH keys'') y pulsa sobre
``Upload new picture''.

.Enlace ``Profile''.
image::images/your-profile.png[Enlace ``Profile''.]

Nosotros eligiremos como ejemplo una copia del logo de Git que tengamos en
el disco duro y luego tendremos opción de recortarlo al subirlo.

.Recortar tu icono
image::images/avatar-crop.png[Recortar tu icono.]

Desde ahora, quien vea tu perfil o tus contribuciones a repositorios verá
tu nuevo icono junto a tu nombre.

Si da la casualidad que ya tienes tu icono en el popular servicio Gravatar
(conocido por su uso en las cuentas de Wordpress), este icono será detectado
y no tendrás que hacer, si quieres, este paso.

==== Tus direcciones de correo

La forma con la que GitHub identifica tus contribuciones a Git es mediante
la dirección de correo electrónico. Si tienes varias direcciones diferentes
en tus contribuciones (commits) y quieres que GitHub sepa que son de tu
cuenta, necesitas añadirlas todas en la sección Emails de la sección
de administración.

[[_add_email_addresses]]
.Añadiendo direcciones de correo
image::images/email-settings.png[Añadiendo direcciones de correo.]

En <<_add_email_addresses>> podemos ver los diferentes estados posibles. La
dirección inicial se verifica y se utiliza como dirección principal, lo que
significa que es donde vas a recibir cualquier notificación. La siguiente
dirección se puede verificar y ponerla entonces como dirección principal,
si quieres cambiarla. La última dirección no está verificada, lo que
significa que no puedes usarla como principal. Pero si GitHub ve un commit
con esa dirección, la identificará asociándola a tu usuario.

==== Autentificación de dos pasos

Finalmente, y para mayor seguridad, deberías configurar la Autentificación
de Dos Pasos o ``2FA''. Este tipo de autentificación se está haciendo más
popular para reducir el riesgo de que te roben la cuenta. Al activarla,
GitHub te pedirá identificarte de dos formas, de forma que si una de ellas
resulta comprometida, el atacante no conseguirá acceso a tu cuenta.

Puedes encontrar la configuración de ``2FA'' en la opción Security de los
ajustes de la cuenta.

.2FA dentro de Security
image::images/2fa-1.png[2FA dentro de Security]

Si pulsas en el botón ``Set up two-factor authentication'', te saldrá
una página de configuración donde podrás elegir un generador de códigos
en una aplicación de móvil (es decir, códigos de un solo uso) o bien
podrás elegir que te envíen un SMS cada vez que necesites entrar.

Cuando configures este método de autentificación, tu cuenta será un poco
más segura ya que tendrás que proporcionar un código junto a tu contraseña
cada vez que accedas a GitHub.
